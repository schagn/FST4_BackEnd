//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackEndView.CreateWebServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreateWebServiceReference.CreateWebServiceSoap")]
    public interface CreateWebServiceSoap {
        
        // CODEGEN: Generating message contract since element name statementModel from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertStatement", ReplyAction="*")]
        BackEndView.CreateWebServiceReference.InsertStatementResponse InsertStatement(BackEndView.CreateWebServiceReference.InsertStatementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<BackEndView.CreateWebServiceReference.InsertStatementResponse> InsertStatementAsync(BackEndView.CreateWebServiceReference.InsertStatementRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertStatementRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertStatement", Namespace="http://tempuri.org/", Order=0)]
        public BackEndView.CreateWebServiceReference.InsertStatementRequestBody Body;
        
        public InsertStatementRequest() {
        }
        
        public InsertStatementRequest(BackEndView.CreateWebServiceReference.InsertStatementRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertStatementRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DataRepository.CreateWebServiceReference.StatementModel statementModel;
        
        public InsertStatementRequestBody() {
        }
        
        public InsertStatementRequestBody(DataRepository.CreateWebServiceReference.StatementModel statementModel) {
            this.statementModel = statementModel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertStatementResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertStatementResponse", Namespace="http://tempuri.org/", Order=0)]
        public BackEndView.CreateWebServiceReference.InsertStatementResponseBody Body;
        
        public InsertStatementResponse() {
        }
        
        public InsertStatementResponse(BackEndView.CreateWebServiceReference.InsertStatementResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertStatementResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string InsertStatementResult;
        
        public InsertStatementResponseBody() {
        }
        
        public InsertStatementResponseBody(string InsertStatementResult) {
            this.InsertStatementResult = InsertStatementResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CreateWebServiceSoapChannel : BackEndView.CreateWebServiceReference.CreateWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateWebServiceSoapClient : System.ServiceModel.ClientBase<BackEndView.CreateWebServiceReference.CreateWebServiceSoap>, BackEndView.CreateWebServiceReference.CreateWebServiceSoap {
        
        public CreateWebServiceSoapClient() {
        }
        
        public CreateWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreateWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BackEndView.CreateWebServiceReference.InsertStatementResponse BackEndView.CreateWebServiceReference.CreateWebServiceSoap.InsertStatement(BackEndView.CreateWebServiceReference.InsertStatementRequest request) {
            return base.Channel.InsertStatement(request);
        }
        
        public string InsertStatement(DataRepository.CreateWebServiceReference.StatementModel statementModel) {
            BackEndView.CreateWebServiceReference.InsertStatementRequest inValue = new BackEndView.CreateWebServiceReference.InsertStatementRequest();
            inValue.Body = new BackEndView.CreateWebServiceReference.InsertStatementRequestBody();
            inValue.Body.statementModel = statementModel;
            BackEndView.CreateWebServiceReference.InsertStatementResponse retVal = ((BackEndView.CreateWebServiceReference.CreateWebServiceSoap)(this)).InsertStatement(inValue);
            return retVal.Body.InsertStatementResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BackEndView.CreateWebServiceReference.InsertStatementResponse> BackEndView.CreateWebServiceReference.CreateWebServiceSoap.InsertStatementAsync(BackEndView.CreateWebServiceReference.InsertStatementRequest request) {
            return base.Channel.InsertStatementAsync(request);
        }
        
        public System.Threading.Tasks.Task<BackEndView.CreateWebServiceReference.InsertStatementResponse> InsertStatementAsync(DataRepository.CreateWebServiceReference.StatementModel statementModel) {
            BackEndView.CreateWebServiceReference.InsertStatementRequest inValue = new BackEndView.CreateWebServiceReference.InsertStatementRequest();
            inValue.Body = new BackEndView.CreateWebServiceReference.InsertStatementRequestBody();
            inValue.Body.statementModel = statementModel;
            return ((BackEndView.CreateWebServiceReference.CreateWebServiceSoap)(this)).InsertStatementAsync(inValue);
        }
    }
}
